# backlog_task:
#   description: >
#     Fetch ideas from Notion with NotionTableFetchTool.
#     Analyze the product ideas: {ideas}.
#     Break down each idea into one or more well-structured GitHub-ready issues.
#     Each issue must:
#       - have a clear and concise title,
#       - contain a detailed description with context and purpose,
#       - list at least three actionable requirements,
#       - include clear acceptance criteria in checklist format.
#     Check the current GitHub Project Board for existing issues.
#     Don't create duplicate or similar issues.
#     Use the GithubCreateIssueTool to create these issues in the GitHub Project Board.

#   expected_output: >
#     Success on creating issues in the GitHub Project Board.

#   agent: product_owner

develop_task:
  description: >
    Select one high-priority issue from the backlog from the pre-selected GitHub-Repository with GithubIssueFetchTool.
    Analyze the issue details, including title, description, requirements, and acceptance criteria.
    Ensure you understand the context and purpose of the issue and compare with files in the current repository with GithubListFilesTool.
    Create a new branch for development using the format: 'feature/<slugified-issue-title>' with GithubCreateBranchTool.
    Implement the required functionality in the new Git branch and take the exisiting projhect in consideration.
    Write clean, testable code that fulfills all the defined acceptance criteria.
    Slice into smaller, manageable commits that are easy to review and commit with GithubCommitCodeTool.
    Create tests to verify the functionality, ensuring they cover all edge cases.
    Use the CodeInterpreterTool to run tests and validate the implementation.
    Ensure the code adheres to the project's coding standards and best practices.
    Document the code thoroughly, including comments and docstrings where necessary.
    Ensure the branch is based on the latest main branch to avoid conflicts.
    Push the code to the remote repository and ensure it is well-documented.
    Then, open a pull request (PR) that includes a technical summary, references the related issue (e.g. #123), and outlines how to test the implementation with GithubCreatePullRequestTool.

  expected_output: >
    A single JSON object with the following fields:
      - branch_name: string (e.g. "feature/user-account-creation")
      - pr_title: string (e.g. "✨ Implement user account creation")
      - code: Markdown-formatted code block (Python, TypeScript, etc.)
      - pr_description: string including technical summary, linked issue, and test instructions

    Example:
    {
      "branch_name": "feature/user-account-creation",
      "pr_title": "✨ Implement user account creation",
      "code": "```python\ndef create_account(...):\n    # implementation\n```",
      "pr_description": "This PR implements #123 by adding a backend endpoint and frontend form. Tested manually and via unit tests."
    }

  agent: developer
